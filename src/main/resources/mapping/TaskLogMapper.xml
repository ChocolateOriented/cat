<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat.mapper.TaskLogMapper">
    <resultMap id="BaseResultMap" type="com.cat.module.entity.TaskLog">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="order_id" jdbcType="VARCHAR" property="orderId" />
        <result column="product_type" property="productType"/>
        <result column="order_type" property="orderType"/>
        <result column="collector_id" jdbcType="VARCHAR" property="collectorId" />
        <result column="collector_name" jdbcType="VARCHAR" property="collectorName" />
        <result column="collect_cycle" jdbcType="VARCHAR" property="collectCycle" />
        <result column="order_status" jdbcType="VARCHAR" property="orderStatus" />
        <result column="payoff_time" jdbcType="TIMESTAMP" property="payoffTime" />
        <result column="loan_term" jdbcType="INTEGER" property="loanTerm" />
        <result column="customer_id" jdbcType="VARCHAR" property="customerId" />
        <result column="customer_name" jdbcType="VARCHAR" property="customerName" />
        <result column="mobile" jdbcType="VARCHAR" property="mobile" />
        <result column="repayment_time" jdbcType="TIMESTAMP" property="repaymentTime" />
        <result column="loan_amount" jdbcType="DECIMAL" property="loanAmount" />
        <result column="lent_amount" jdbcType="DECIMAL" property="lentAmount" />
        <result column="interest_mode" jdbcType="VARCHAR" property="interestMode" />
        <result column="interest_value" jdbcType="DECIMAL" property="interestValue" />
        <result column="penalty_mode" jdbcType="VARCHAR" property="penaltyMode" />
        <result column="penalty_value" jdbcType="DECIMAL" property="penaltyValue" />
        <result column="relief_amount" jdbcType="DECIMAL" property="reliefAmount" />
        <result column="charge_value" jdbcType="DECIMAL" property="chargeValue" />
        <result column="repayment_amount" jdbcType="DECIMAL" property="repaymentAmount" />
        <result column="postpone_count" jdbcType="INTEGER" property="postponeCount" />
        <result column="behavior_status" jdbcType="VARCHAR" property="behaviorStatus" />
        <result column="collect_task_status" jdbcType="VARCHAR" property="collectTaskStatus" />
        <result column="task_id" jdbcType="BIGINT" property="taskId" />
        <result column="overdue_days" jdbcType="INTEGER" property="overdueDays" />
        <result column="platformext" jdbcType="VARCHAR" property="platformext" />
        <result column="creditamount" jdbcType="INTEGER" property="creditamount" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="create_by" jdbcType="VARCHAR" property="createBy" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="remark" jdbcType="VARCHAR" property="remark" />
        <result column="last_payment_time" property="lastPaymentTime"/>
        <result column="postpone_time" property="postponeTime"/>

    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_task_log
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="batchInsertTaskLog">
        INSERT INTO t_task_log(
        id,
        order_id,
        product_type,
        order_type,
        collector_id,
        collector_name,
        collect_cycle,
        collect_rules_type,
        order_status,
        payoff_time,
        loan_term,
        customer_id,
        customer_name,
        mobile,
        repayment_time,
        loan_amount,
        lent_amount,
        interest_mode,
        interest_value,
        penalty_mode,
        penalty_value,
        relief_amount,
        charge_value,
        repayment_amount,
        postpone_count,
        behavior_status,
        collect_task_status,
        task_id,
        overdue_days,
        platformext,
        creditamount,
        create_by,
        update_by,
        last_payment_time,
        postpone_time
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id}
            , #{item.orderId}
            , #{item.productType}
            , #{item.orderType}
            , #{item.collectorId}
            , #{item.collectorName}
            , #{item.collectCycle}
            , #{item.collectRulesType}
            , #{item.orderStatus}
            , #{item.payoffTime}
            , #{item.loanTerm}
            , #{item.customerId}
            , #{item.customerName}
            , #{item.mobile}
            , #{item.repaymentTime}
            , #{item.loanAmount}
            , #{item.lentAmount}
            , #{item.interestMode}
            , #{item.interestValue}
            , #{item.penaltyMode}
            , #{item.penaltyValue}
            , #{item.reliefAmount}
            , #{item.chargeValue}
            , #{item.repaymentAmount}
            , #{item.postponeCount}
            , #{item.behaviorStatus}
            , #{item.collectTaskStatus}
            , #{item.taskId}
            , #{item.overdueDays}
            , #{item.platformext}
            , #{item.creditamount}
            , #{item.createBy}
            , #{item.updateBy}
            , #{item.lastPaymentTime}
            , #{item.postponeTime}
            )
        </foreach>
    </insert>
    <insert id="insert" parameterType="com.cat.module.entity.TaskLog">
        insert into t_task_log (id, order_id, product_type,order_type, collector_id,
        collector_name, collect_cycle, order_status,
        payoff_time, loan_term, customer_id,
        customer_name, mobile, repayment_time,
        loan_amount, lent_amount, interest_mode,
        interest_value, penalty_mode, penalty_value,
        relief_amount, charge_value, repayment_amount,
        postpone_count, behavior_status, collect_task_status,
        task_id, overdue_days, platformext,
        creditamount, create_by,
        update_by, remark,last_payment_time,
        postpone_time
        )
        values (#{id,jdbcType=BIGINT}, #{orderId,jdbcType=VARCHAR},#{productType},#{orderType}, #{collectorId,jdbcType=VARCHAR},
        #{collectorName,jdbcType=VARCHAR}, #{collectCycle,jdbcType=VARCHAR}, #{orderStatus,jdbcType=VARCHAR},
        #{payoffTime,jdbcType=TIMESTAMP}, #{loanTerm,jdbcType=INTEGER}, #{customerId,jdbcType=VARCHAR},
        #{customerName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{repaymentTime,jdbcType=TIMESTAMP},
        #{loanAmount,jdbcType=DECIMAL}, #{lentAmount,jdbcType=DECIMAL}, #{interestMode,jdbcType=VARCHAR},
        #{interestValue,jdbcType=DECIMAL}, #{penaltyMode,jdbcType=VARCHAR}, #{penaltyValue,jdbcType=DECIMAL},
        #{reliefAmount,jdbcType=DECIMAL}, #{chargeValue,jdbcType=DECIMAL}, #{repaymentAmount,jdbcType=DECIMAL},
        #{postponeCount,jdbcType=INTEGER}, #{behaviorStatus,jdbcType=VARCHAR}, #{collectTaskStatus,jdbcType=VARCHAR},
        #{taskId,jdbcType=BIGINT}, #{overdueDays,jdbcType=INTEGER}, #{platformext,jdbcType=VARCHAR},
        #{creditamount,jdbcType=INTEGER},  #{createBy,jdbcType=VARCHAR},
        #{updateBy,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{lastPaymentTime}, #{postponeTime}
        )
    </insert>
    <update id="updateByPrimaryKey" parameterType="com.cat.module.entity.TaskLog">
        update t_task_log
        set order_id = #{orderId,jdbcType=VARCHAR},
        product_type = #{productType},
        order_type = #{orderType},
        collector_id = #{collectorId,jdbcType=VARCHAR},
        collector_name = #{collectorName,jdbcType=VARCHAR},
        collect_cycle = #{collectCycle,jdbcType=VARCHAR},
        order_status = #{orderStatus,jdbcType=VARCHAR},
        payoff_time = #{payoffTime,jdbcType=TIMESTAMP},
        loan_term = #{loanTerm,jdbcType=INTEGER},
        customer_id = #{customerId,jdbcType=VARCHAR},
        customer_name = #{customerName,jdbcType=VARCHAR},
        mobile = #{mobile,jdbcType=VARCHAR},
        repayment_time = #{repaymentTime,jdbcType=TIMESTAMP},
        loan_amount = #{loanAmount,jdbcType=DECIMAL},
        lent_amount = #{lentAmount,jdbcType=DECIMAL},
        interest_mode = #{interestMode,jdbcType=VARCHAR},
        interest_value = #{interestValue,jdbcType=DECIMAL},
        penalty_mode = #{penaltyMode,jdbcType=VARCHAR},
        penalty_value = #{penaltyValue,jdbcType=DECIMAL},
        relief_amount = #{reliefAmount,jdbcType=DECIMAL},
        charge_value = #{chargeValue,jdbcType=DECIMAL},
        repayment_amount = #{repaymentAmount,jdbcType=DECIMAL},
        postpone_count = #{postponeCount,jdbcType=INTEGER},
        behavior_status = #{behaviorStatus,jdbcType=VARCHAR},
        collect_task_status = #{collectTaskStatus,jdbcType=VARCHAR},
        task_id = #{taskId,jdbcType=BIGINT},
        overdue_days = #{overdueDays,jdbcType=INTEGER},
        platformext = #{platformext,jdbcType=VARCHAR},
        creditamount = #{creditamount,jdbcType=INTEGER},       
        create_by = #{createBy,jdbcType=VARCHAR},
        update_by = #{updateBy,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        last_payment_time = #{lastPaymentTime},
        postpone_time = #{postponeTime}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select id, order_id,product_type,order_type, collector_id, collector_name, collect_cycle, order_status, payoff_time,
        loan_term, customer_id, customer_name, mobile, repayment_time, loan_amount, lent_amount,
        interest_mode, interest_value, penalty_mode, penalty_value, relief_amount, charge_value,
        repayment_amount, postpone_count, behavior_status, collect_task_status, task_id,
        overdue_days, platformext, creditamount, create_time, create_by, update_time, update_by,
        remark, last_payment_time, postpone_time
        from t_task_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, order_id,product_type,order_type, collector_id, collector_name, collect_cycle, order_status, payoff_time,
        loan_term, customer_id, customer_name, mobile, repayment_time, loan_amount, lent_amount,
        interest_mode, interest_value, penalty_mode, penalty_value, relief_amount, charge_value,
        repayment_amount, postpone_count, behavior_status, collect_task_status, task_id,
        overdue_days, platformext, creditamount, create_time, create_by, update_time, update_by,
        remark, last_payment_time, postpone_time
        from t_task_log
    </select>
    <select id="getDayTaskCount" resultType="com.cat.module.dto.CurrentOrderDto">
        SELECT collector_id AS collectorId,
        behavior_status AS behaviorStatus,
        IFNULL(count(*),0) AS `count`,
        IFNULL(SUM(repayment_amount),0) AS sumRepaymentAmount
        FROM t_task_log
        WHERE  collector_id = #{collectorId} AND TO_DAYS(create_time) = TO_DAYS(NOW())
        GROUP BY behavior_status
    </select>
    <select id="getShouldPayOrder" resultType="INTEGER">
        SELECT count(*)
        FROM t_task
        WHERE collector_id = #{collectorId} AND order_status = #{orderStatus}
    </select>
    <select id="getListOfDayOrder" resultMap="BaseResultMap">
        select id, order_id,product_type,order_type, collector_id, collector_name, collect_cycle, order_status, payoff_time,
        loan_term, customer_id, customer_name, mobile, repayment_time, loan_amount, lent_amount,
        interest_mode, interest_value, penalty_mode, penalty_value, relief_amount, charge_value,
        repayment_amount, postpone_count, behavior_status, collect_task_status, task_id,
        overdue_days, platformext, creditamount, create_time, create_by, update_time, update_by,
        remark, last_payment_time, postpone_time
        from t_task_log
        WHERE collector_id = #{collectorId}
        AND TO_DAYS(create_time) = TO_DAYS(NOW())
        AND behavior_status IN ('POSTPONE', 'FINISHED')
        ORDER BY create_time DESC
    </select>
    <select id="getAllOrderDetails" resultType="com.cat.module.dto.OrderDetailsReportDto">
        select
        tb.collector_name AS collectorName,
        tb.collect_cycle as collectCycle,
        tb.product_type as productType,
        tb.platformext as platformext,
        tb.order_id AS orderId,
        ts.lend_time as lendTime,
        IF(tb.behavior_status = 'POSTPONE',tb.creditamount + IFNULL(tb.relief_amount,0),1007)  AS creditamount,
        TO_DAYS(tb.create_time) - TO_DAYS(tb.repayment_time) AS overdueDays,
        ts.lend_time AS borrowTime,
        tb.postpone_count AS postponeCount,
        tb.create_time AS postponeTime,
        tb.repayment_time AS repaymentTime,
        IF(tb.behavior_status = 'POSTPONE',tb.repayment_amount,0) AS postponeAmount,
        tb.payoff_time AS payoffTime,
        IF(tb.behavior_status = 'FINISHED',tb.repayment_amount,0) AS repaymentAmount,
        IF(tb.behavior_status = 'FINISHED','还清','正常') AS orderStatus,
        (select t2.create_time from t_task_log t2
        where t2.order_id = tb.order_id and t2.behavior_status = 'IN' and
        collect_task_status in ('UNOPEND_TASK', 'TASK_POSTPONE')
        and t2.create_time <![CDATA[<]]> tb.create_time
                             order by t2.create_time DESC
                             limit 1
        ) as createdTime,
        tb.mobile as mobile
        from t_task_log tb LEFT JOIN t_task ts ON tb.order_id = ts.order_id
        where tb.behavior_status in ('POSTPONE', 'FINISHED')
        UNION ALL
        SELECT
        t.collector_name AS collectorName,
        t.collect_cycle as collectCycle,
        t.product_type as productType,
        b.channel as platformext,
        t.order_id AS orderId,
        t.lend_time as lendTime,
        t.loan_amount + t.interest_value + IF(TO_DAYS(NOW()) - TO_DAYS(t.repayment_time) <![CDATA[<]]> 0,0,TO_DAYS(NOW()) - TO_DAYS(t.repayment_time)) * t.penalty_value  AS creditamount,
        TO_DAYS(NOW()) - TO_DAYS(t.repayment_time) AS overdueDays,
        t.lend_time AS borrowTime,
        t.postpone_count AS postponeCount,
        DATE_SUB(t.repayment_time,INTERVAL 7 DAY) AS postponeTime,
        t.repayment_time AS repaymentTime,
        t.postpone_total_amount AS postponeAmount,
        t.payoff_time AS payoffTime,
        NULL AS repaymentAmount,
        IF(TO_DAYS(NOW()) - TO_DAYS(t.repayment_time) <![CDATA[>]]> 0,'逾期','正常') AS orderStatus,
        (
        SELECT tt.create_time FROM t_task_log tt
        WHERE tt.order_id = t.order_id AND tt.behavior_status = 'IN' and
        tt.collect_task_status in ('UNOPEND_TASK', 'TASK_POSTPONE')
        order by tt.create_time DESC
        limit 1
        ) AS createdTime,
        t.mobile
        FROM t_task t LEFT JOIN t_bank b ON t.bank_no = b.bank_card
        WHERE
        t.order_status = 'PAYMENT' AND t.collect_task_status <![CDATA[<>]]> 'UNOPEND_TASK'


    </select>

    <select id="getInOrderCount" resultType="java.lang.Integer" >
        SELECT
	      count(DISTINCT order_id)
        FROM
            t_task_log
        WHERE
            collector_id = #{collectorId}
        AND behavior_status = 'IN'
        AND TO_DAYS(create_time) = TO_DAYS(NOW())
        AND
            order_id NOT IN (
            SELECT l.order_id FROM(
                SELECT
                    *
                FROM
                    (
                        SELECT
                            *
                        FROM
                            t_task_log
                        WHERE
                            collector_id = #{collectorId}
                        AND TO_DAYS(create_time) = TO_DAYS(NOW())
                        ORDER BY
                            create_time DESC
                    ) AS t
                GROUP BY
                    t.order_id
                HAVING
                    t.behavior_status = 'OUT'
            ) AS l )
    </select>
</mapper>