<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mo9.risk.modules.dunning.dao.TMisDunningTaskDao">


  	<update id="batchUpdateExpiredTask"  >
	     <foreach collection="list" item="item" index="index" open="" close="" separator=";">
				UPDATE t_task 
				<set>
				    update_time = now(),
				    update_by = #{item.updateBy},
					collector_id = #{item.collectorId},
					collector_name = #{item.collectorName},
					collect_period_begin = #{item.collectPeriodBegin},
					collect_period_end = #{item.collectPeriodEnd},
					collect_cycle = #{item.collectCycle}
<!-- 					nextfollowdate = null -->
				</set>
				WHERE id = #{item.id}
		 </foreach>
    </update>
    
    <update id="batchinsertTask"  >
	     <foreach collection="list" item="item" index="index" open="" close="" separator=";">
				UPDATE t_task 
				<set>
				    update_time = now(),
				    update_by = #{item.updateBy},
					collector_id = #{item.collectorId},
					collector_name = #{item.collectorName},
					collect_period_begin = #{item.collectPeriodBegin},
					collect_period_end = #{item.collectPeriodEnd},
					collect_cycle = #{item.collectCycle},
					collect_task_status = #{item.collectTaskStatus}
				</set>
				WHERE id = #{item.id}
		 </foreach>
    </update>
    
    
    <select id="newfindDelayTaskByDunningcycle" resultType="com.cat.module.entity.TaskLog"> 
		   	 SELECT 
					CASE 
						WHEN t.order_status = 'payment' THEN DATEDIFF(curdate(), t.repayment_time) 
						ELSE 0
					END as "overduedays",
					t.customer_id  AS  customerId;#用户code
					t.customer_name  AS  customerName;		//客户姓名
					t.mobile  AS  mobile;		// 手机号
					t.order_type  AS  orderType;//订单类型
					t.product_type  AS  productType;//产品类型
					t.order_status  AS  orderStatus;//订单状态
					t.loan_amount  AS  loanAmount;//借贷金额
					t.loan_term  AS  loanTerm;//借贷期限
					t.lent_amount  AS  lentAmountr;//放款金额
					t.interest_mode  AS  interestMode;//利息模式
					t.interest_value  AS  interestValue;//利息值
					t.penalty_mode  AS  penaltyMode;//罚息模式
					t.penalty_value  AS  penaltyValue;//罚息值
					t.relief_amount  AS  reliefAmount;//减免金额
					t.charge_value  AS  chargeValue;//服务费值
					t.postpone_unit_charge  AS  postponeUnitCharge;//延期单位服务费
					t.postpone_count  AS  postponeCount;//延期次数
					t.lend_time  AS  lendTime;//放款时间
					t.payoff_time  AS  payoffTime;//还清时间
					t.repayment_time  AS  repaymentTime;//到期还款日期
					t.collector_id  AS  collectorId;//催讨人id
					t.collector_name  AS  collectorName;//催讨人名
					t.task_start_time  AS  taskStartTime;//任务起始时间
					t.task_end_time  AS  taskEndTime;//任务结束时间
					t.collect_period_begin  AS  collectPeriodBegin;//催讨周期-逾期周期起始
					t.collect_period_end  AS  collectPeriodEnd;//催讨周期-逾期周期截至
					t.collect_task_status  AS  collectTaskStatus;//催款任务状态(未开启任务，任务进行中，任务结束，延期)
					t.collect_tel_remark  AS  collectTelRemark;//催收备注
					t.collect_time  AS  collectTime;//操作时间
					t.collect_cycle  AS  collectCycle;//催收队列
					t.remark  AS  remark;//备注
					t.ispayoff AS ispayoff;		// 任务所对应的订单是否还清
			FROM t_task t 
			 <where>
					t.collect_cycle =  #{collectCycle} 
					AND  t.collect_task_status = #{collectTaskStatus}
					AND DATEDIFF(curdate(), t.repayment_time) NOT BETWEEN #{begin} AND  #{end}
			 </where>
			ORDER BY loan_amount DESC
	</select>
	
	
	<select id="newfingDelayOrderByNotTask" resultType="com.cat.module.entity.TaskLog"> 
		SELECT
			CASE 
				WHEN t.order_status = 'payment' THEN DATEDIFF(curdate(), t.repayment_time) 
				ELSE 0
			END as "overduedays",
			t.customer_id  AS  customerId;#用户code
			t.customer_name  AS  customerName;		//客户姓名
			t.mobile  AS  mobile;		// 手机号
			t.order_type  AS  orderType;//订单类型
			t.product_type  AS  productType;//产品类型
			t.order_status  AS  orderStatus;//订单状态
			t.loan_amount  AS  loanAmount;//借贷金额
			t.loan_term  AS  loanTerm;//借贷期限
			t.lent_amount  AS  lentAmountr;//放款金额
			t.interest_mode  AS  interestMode;//利息模式
			t.interest_value  AS  interestValue;//利息值
			t.penalty_mode  AS  penaltyMode;//罚息模式
			t.penalty_value  AS  penaltyValue;//罚息值
			t.relief_amount  AS  reliefAmount;//减免金额
			t.charge_value  AS  chargeValue;//服务费值
			t.postpone_unit_charge  AS  postponeUnitCharge;//延期单位服务费
			t.postpone_count  AS  postponeCount;//延期次数
			t.lend_time  AS  lendTime;//放款时间
			t.payoff_time  AS  payoffTime;//还清时间
			t.repayment_time  AS  repaymentTime;//到期还款日期
			t.collector_id  AS  collectorId;//催讨人id
			t.collector_name  AS  collectorName;//催讨人名
			t.task_start_time  AS  taskStartTime;//任务起始时间
			t.task_end_time  AS  taskEndTime;//任务结束时间
			t.collect_period_begin  AS  collectPeriodBegin;//催讨周期-逾期周期起始
			t.collect_period_end  AS  collectPeriodEnd;//催讨周期-逾期周期截至
			t.collect_task_status  AS  collectTaskStatus;//催款任务状态(未开启任务，任务进行中，任务结束，延期)
			t.collect_tel_remark  AS  collectTelRemark;//催收备注
			t.collect_time  AS  collectTime;//操作时间
			t.collect_cycle  AS  collectCycle;//催收队列
			t.remark  AS  remark;//备注
			t.ispayoff AS ispayoff;		// 任务所对应的订单是否还清	
		FROM t_task AS t
		where
			t.collect_task_status = 'UNOPEND_TASK' or t.collect_task_status = 'TASK_POSTPONE'
			AND DATEDIFF(curdate(), t.repayment_time) >= #{day}
		ORDER BY loan_amount DESC
	</select>
	
<!-- 	<insert id="batchinsertTask"> -->
<!-- 		INSERT INTO t_mis_dunning_task( -->
<!-- 			id, -->
<!-- 			dunningpeopleid, -->
<!-- 			dunningpeoplename, -->
<!-- 			dealcode, -->
<!-- 			capitalamount, -->
<!-- 			begin, -->
<!-- 			deadline, -->
<!-- 			end, -->
<!-- 			dunningperiodbegin, -->
<!-- 			dunningperiodend, -->
<!-- 			dunnedamount, -->
<!-- 			ispayoff, -->
<!-- 			reliefamount, -->
<!-- 			dunningtaskstatus, -->
<!-- 			amountonend, -->
<!-- 			field1, -->
<!-- 			repaymenttime, -->
<!-- 			createby, -->
<!-- 			createdate, -->
<!-- 			updateby, -->
<!-- 			updatedate, -->
<!-- 			dunningcycle, -->
<!-- 			quality, -->
<!-- 			platformext, -->
<!-- 			debtbiztype -->
<!-- 		) VALUES -->
<!-- 		<foreach collection="list" item="item" index="index" separator=","> -->
<!-- 		 ( -->
<!-- 			#{item.id}, -->
<!-- 			#{item.dunningpeopleid}, -->
<!-- 			#{item.dunningpeoplename}, -->
<!-- 			#{item.dealcode}, -->
<!-- 			#{item.capitalamount}, -->
<!-- 			#{item.begin}, -->
<!-- 			#{item.deadline}, -->
<!-- 			#{item.end}, -->
<!-- 			#{item.dunningperiodbegin}, -->
<!-- 			#{item.dunningperiodend}, -->
<!-- 			#{item.dunnedamount}, -->
<!-- 			#{item.ispayoff}, -->
<!-- 			#{item.reliefamount}, -->
<!-- 			#{item.dunningtaskstatus}, -->
<!-- 			#{item.dunningAmounOnEnd}, -->
<!-- 			#{item.field1}, -->
<!-- 			#{item.repaymentTime}, -->
<!-- 			#{item.createBy}, -->
<!-- 			#{item.createDate}, -->
<!-- 			#{item.updateBy}, -->
<!-- 			#{item.updateDate}, -->
<!-- 			#{item.dunningcycle}, -->
<!-- 			#{item.quality}, -->
<!-- 			#{item.platformext}, -->
<!-- 			#{item.debtbiztype} -->
<!-- 		) -->
<!-- 		</foreach> -->
<!-- 	</insert> -->
	
<!-- 	<select id="findAtuoQ0Dealcode" resultType="string"> -->
<!--  	 SELECT -->
<!-- 		o.dealcode -->
<!-- 		FROM t_risk_order AS o -->
<!-- 		WHERE o.type = 'loan' -->
<!-- 			AND o.merchant_id = 7 -->
<!-- 			AND o.`status` = 'payment' -->
<!-- 			AND DATEDIFF(curdate(), o.repayment_time) = #{day} -->
<!-- 			AND NOT EXISTS  ( -->
<!-- 			SELECT -->
<!-- 					DISTINCT buyer_id -->
<!-- 				FROM t_risk_order AS o1 -->
<!-- 				WHERE o1.type = 'loan' -->
<!-- 					AND o1.merchant_id = 7 -->
<!-- 					AND o1.`status` = 'payoff' -->
<!-- 					AND o.buyer_id = o1.buyer_id -->
<!-- 					AND DATEDIFF(DATE(o1.payoff_time), DATE(o1.repayment_time)) > #{payoffday} -->
<!-- 			) -->
<!-- 			AND EXISTS ( -->
<!-- 				SELECT -->
<!-- 					1 -->
<!-- 				FROM t_risk_order AS o2 -->
<!-- 				WHERE o2.type = 'loan' -->
<!-- 					and o2.merchant_id = 7 -->
<!-- 					and o2.`status` in ('payment', 'payoff') -->
<!-- 					and o2.buyer_id = o.buyer_id -->
<!-- 				group by o2.buyer_id -->
<!-- 				HAVING count(1) > 1 -->
<!-- 			); -->
<!-- 	</select> -->

</mapper>